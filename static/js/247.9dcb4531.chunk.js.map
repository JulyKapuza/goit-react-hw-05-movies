{"version":3,"file":"static/js/247.9dcb4531.chunk.js","mappings":"uMAkDA,UA5Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OARAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUV,GAASW,MAAK,YAAe,IAAZR,EAAW,EAAXA,KACzBC,EAAQD,EACT,GACF,GAAE,CAACH,IAECG,GAKH,wBACGA,EAAKS,OAAS,EAAIT,EAAKU,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC9D,OACE,2BACE,gBACEC,IACEF,EAAY,0CAC2BA,GACnCG,EAENC,IAAKL,KAEP,wBACE,uBAAIA,OAEN,uCAAeE,OAZRH,EAeZ,KAEC,0DAxBG,IA6BV,C,6LC9CDO,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,GAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBN,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBK,EADhB,YADvB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,wFACkBqB,EAAAA,EAAAA,IAAM,UAAD,OAChBrB,EADgB,oBACGsB,EADH,oBADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAyBV,GAAzB,wFACkBqB,EAAAA,EAAAA,IAAM,UAAD,OAChBrB,EADgB,4BACWsB,EADX,oBADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,wFACkBqB,EAAAA,EAAAA,IAAM,UAAD,OAChBrB,EADgB,4BACWsB,EADX,2BADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import { fetchCast } from 'services/moviesApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport img from '../../default/coming.jpg';\nimport {  useLocation } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    fetchCast(movieId).then(({ cast }) => {\n      setCast(cast);\n    });\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {cast.length > 0 ? cast.map(({ id, original_name, profile_path, character }) => {\n        return (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                  : img\n              }\n              alt={original_name}\n            />\n            <p>\n              <b>{original_name}</b>\n            </p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })\n      : (\n        <p>We will add information soon</p>\n      )\n      }\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bc4500f3e002eaa279df91f9e5a7b7d1';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMoviesByWord(searchQuery) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n  return response.data;\n}\n\nexport async function fetchMoviesById(movieId) {\n  const response = await axios(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n"],"names":["movieId","useParams","useState","cast","setCast","location","useLocation","console","log","useEffect","fetchCast","then","length","map","id","original_name","profile_path","character","src","img","alt","axios","API_KEY","fetchMoviesTrend","response","data","fetchMoviesByWord","searchQuery","fetchMoviesById","fetchReviews"],"sourceRoot":""}