{"version":3,"file":"static/js/774.33c1c383.chunk.js","mappings":"sMAEaA,E,OAAOC,GAAAA,GAAH,kE,SCEJC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,SAACR,EAAD,WACE,SAAC,KAAD,CAAMS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFMD,EAMd,KAGN,C,mHChBYK,EAAUX,EAAAA,GAAAA,IAAH,wKAQPY,EAAOZ,EAAAA,GAAAA,KAAH,8CAIJa,EAAQb,EAAAA,GAAAA,MAAH,6DAMLc,EAASd,EAAAA,GAAAA,OAAH,ge,SCjBNe,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAYA,OACE,SAACR,EAAD,WACE,UAACC,EAAD,CAAMI,SARW,SAAAI,GACnBA,EAAEC,iBAEFL,EAASE,GACTC,EAAa,GACd,EAGG,WACE,SAACN,EAAD,CAAOS,MAAOJ,EAAWK,KAAK,OAAOC,SAblB,SAAAJ,GACvBD,EAAaC,EAAEK,cAAcH,MAAMI,cACpC,KAYK,SAACZ,EAAD,CAAQS,KAAK,SAAb,wBAIP,E,0BCeD,EAlCe,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAe4B,EAAf,KAEMC,EAAK,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAsB3C,OATAC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAkBH,GAAOI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC/BN,EAAUM,EACX,GACF,GAAE,CAACL,KAGF,6BACE,SAAChB,EAAD,CAAWC,SAtBU,SAAAE,GACvB,IAAMmB,EAAcnB,EAEO,KAAvBmB,EAAYC,QAIhBT,EAAgB,CAAEE,MAAOM,IACzBP,EAAU,KAJRS,MAAM,mCAKT,KAcG,SAACtC,EAAA,EAAD,CAAWC,OAAQA,MAGxB,C,6LCpCDsC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,GAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAAiCW,GAAjC,wFACkBL,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBI,EADhB,YADvB,cACCF,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACkBP,EAAAA,EAAAA,IAAM,UAAD,OAChBO,EADgB,oBACGN,EADH,oBADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,wFACkBP,EAAAA,EAAAA,IAAM,UAAD,OAChBO,EADgB,4BACWN,EADX,oBADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,wFACkBP,EAAAA,EAAAA,IAAM,UAAD,OAChBO,EADgB,4BACWN,EADX,2BADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.li`\n  margin-bottom: 14px;\n  fon-size:16px;\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <List key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </List>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  padding: 10px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  \n`;\nexport const Input = styled.input`\n  padding: 8px;\n\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  cursor: pointer;\n  text-decoration: none;\n  display: inline-block;\n  color: white;\n  padding: 12px;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  background-image: linear-gradient(\n    to right,\n    #ff1493 0%,\n    #ffc0cb 51%,\n    #c71585 100%\n  );\n  background-size: 200% auto;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  transition: 0.5s;\n\n  :hover,\n  :focus {\n    background-position: right center;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Wrapper, Input, Button, Form } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const handleNameChange = e => {\n    setMovieName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(movieName);\n    setMovieName('');\n  };\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Input value={movieName} type=\"text\" onChange={handleNameChange} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { fetchMoviesByWord } from 'services/moviesApi';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  const query = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = movieName => {\n    const querySearch = movieName;\n\n    if (querySearch.trim() === '') {\n      alert('ðŸ¦„ Enter your request!');\n      return;\n    }\n    setSearchParams({ query: querySearch });\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchMoviesByWord(query).then(({ results }) => {\n      setMovies(results);\n    });\n  }, [query]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleFormSubmit} />\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bc4500f3e002eaa279df91f9e5a7b7d1';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMoviesByWord(searchQuery) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n  return response.data;\n}\n\nexport async function fetchMoviesById(movieId) {\n  const response = await axios(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n"],"names":["List","styled","MovieList","movies","location","useLocation","map","id","title","to","state","from","Wrapper","Form","Input","Button","SearchBox","onSubmit","useState","movieName","setMovieName","e","preventDefault","value","type","onChange","currentTarget","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","query","get","useEffect","fetchMoviesByWord","then","results","querySearch","trim","alert","axios","API_KEY","fetchMoviesTrend","response","data","searchQuery","fetchMoviesById","movieId","fetchCast","fetchReviews"],"sourceRoot":""}