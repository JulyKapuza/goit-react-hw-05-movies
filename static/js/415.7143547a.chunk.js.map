{"version":3,"file":"static/js/415.7143547a.chunk.js","mappings":"sMAEaA,E,OAAOC,GAAAA,GAAH,kE,SCEJC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,SAACR,EAAD,WACE,SAAC,KAAD,CAAMS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFMD,EAMd,KAGN,C,6ECOD,UAtBa,WACX,OAAsCK,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,KACmBC,EAAAA,EAAAA,MACRC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACfJ,EAAeI,EAChB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,KAGD,6BACE,2CACCN,IAAe,SAAC,IAAD,CAAWV,OAAQU,MAGxC,C,6LCtBDS,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,oGACkBM,EAAAA,GAAAA,IAAA,sCAAyCC,IAD3D,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBL,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBI,EADhB,YADvB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACkBP,EAAAA,EAAAA,IAAM,UAAD,OAChBO,EADgB,oBACGN,EADH,oBADvB,cACCC,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,wFACkBP,EAAAA,EAAAA,IAAM,UAAD,OAChBO,EADgB,4BACWN,EADX,oBADvB,cACCC,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,wFACkBP,EAAAA,EAAAA,IAAM,UAAD,OAChBO,EADgB,4BACWN,EADX,2BADvB,cACCC,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.li`\n  margin-bottom: 14px;\n  fon-size:16px;\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <List key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </List>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { fetchMoviesTrend } from '../services/moviesApi';\nimport { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [moviesTrend, setMoviesTrend] = useState(null);\n\n  useEffect(() => {\n    try {\n      const response = fetchMoviesTrend();\n      response.then(({ results }) => {\n        setMoviesTrend(results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {moviesTrend && <MovieList movies={moviesTrend} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bc4500f3e002eaa279df91f9e5a7b7d1';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMoviesByWord(searchQuery) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n  return response.data;\n}\n\nexport async function fetchMoviesById(movieId) {\n  const response = await axios(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n"],"names":["List","styled","MovieList","movies","location","useLocation","map","id","title","to","state","from","useState","moviesTrend","setMoviesTrend","useEffect","fetchMoviesTrend","then","results","error","console","log","axios","API_KEY","response","data","fetchMoviesByWord","searchQuery","fetchMoviesById","movieId","fetchCast","fetchReviews"],"sourceRoot":""}