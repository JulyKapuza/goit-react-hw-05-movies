{"version":3,"file":"static/js/186.d80e7ef1.chunk.js","mappings":"8LAsCA,UAlCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC5BJ,EAAWI,EACZ,GACF,GAAE,CAACR,IAECG,GAKH,wBACGA,EAAQM,OAAS,EAChBN,EAAQO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,0BACE,mCADF,IACkBD,MAElB,6BAAKC,OAJEF,EAOZ,KAED,sEAjBG,IAqBV,C,6LClCDG,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,GAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBN,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBK,EADhB,YADvB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrB,GAA/B,wFACkBc,EAAAA,EAAAA,IAAM,UAAD,OAChBd,EADgB,oBACGe,EADH,oBADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBtB,GAAzB,wFACkBc,EAAAA,EAAAA,IAAM,UAAD,OAChBd,EADgB,4BACWe,EADX,oBADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,wFACkBc,EAAAA,EAAAA,IAAM,UAAD,OAChBd,EADgB,4BACWe,EADX,2BADvB,cACCE,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import { fetchReviews } from 'services/moviesApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(({ results }) => {\n      setReviews(results);\n    });\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <p>\n                <b>Author:</b> {author}\n              </p>\n              <p> {content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bc4500f3e002eaa279df91f9e5a7b7d1';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMoviesByWord(searchQuery) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n  return response.data;\n}\n\nexport async function fetchMoviesById(movieId) {\n  const response = await axios(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","results","length","map","id","author","content","axios","API_KEY","fetchMoviesTrend","response","data","fetchMoviesByWord","searchQuery","fetchMoviesById","fetchCast"],"sourceRoot":""}